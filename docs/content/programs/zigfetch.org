#+TITLE: zigfetch
#+DATE: 2025-01-01T18:01:47+0800
#+LASTMOD: 2025-01-04T17:16:15+0800
#+TYPE: docs
#+DESCRIPTION: Fetch zig packages, utilizing libcurl.

=zigfetch= behaves similarly to =zig fetch=, but utilizing the capabilities of libcurl for its functionality.

HTTP support within Zig's standard library isn't currently stable, [[https://github.com/ziglang/zig/issues/21792][this  proxy issue]] make it even harder, resulting in multiple errors occurring during dependency downloads when building Zig projects.

{{< figure src="https://fs.liujiacai.net/cdn-img/zigcli/zig-fetch-errors.webp" >}}

This poses a significant challenge for Chinese developers owing to [[https://en.wikipedia.org/wiki/Great_Firewall][the Great Firewall]].

As a consequence, =zigfetch= was developed; this tool operates via libcurl to ensure that both the =http_proxy= and =https_proxy= environment variables function correctly.

- https://curl.se/libcurl/c/libcurl-env.html

#+begin_src bash :results verbatim :exports result :dir ../../..
./zig-out/bin/zigfetch --help
#+end_src

#+RESULTS:
#+begin_example
 USAGE:
     ./zig-out/bin/zigfetch [OPTIONS] [--] [package-dir or url]

 OPTIONS:
  -h, --help                       Show help
  -V, --version                    Show version
  -v, --verbose                    Show verbose log
  -t, --timeout INTEGER            Libcurl http timeout in seconds(default: 60)
  -n, --no-dep                     Disable fetch dependencies
  -d, --debug-hash                 Print hash for each file
#+end_example


This is a demo for socks5 proxy setup:

#+begin_src bash
export http_proxy="socks5://127.0.0.1:1080"
export https_proxy=$http_proxy
export all_proxy=$http_proxy
export GIT_SSH_COMMAND='ssh -o ProxyCommand="nc -X 5 -x 127.0.0.1:1080 %h %p"'
#+end_src

=GIT_SSH_COMMAND= is used for fetch =git+http(s)= dependencies.
